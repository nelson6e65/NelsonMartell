name: Documentation

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  release:
    types:
      - created

  workflow_dispatch:

jobs:
  pre-build:
    name: Pre-build
    runs-on: ubuntu-20.04

    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}

    steps:
      - name: Check Duplicate Actions
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.3.0
        with:
          paths: |
            [
              ".github/workflows/documentation.yml",
              ".netlify/**",
              "composer.json",
              "docs/**",
              "netlify.toml",
              "package-lock.json",
              "phpdoc.dist.xml",
              "src/**"
            ]
          do_not_skip: |
            [
              "release",
              "workflow_dispatch"
            ]
          concurrent_skipping: 'same_content'

  build:
    name: Build
    runs-on: ubuntu-20.04
    needs: pre-build
    if: ${{ needs.pre-build.outputs.should_skip != 'true' }}

    steps:
      - uses: actions/checkout@v2

      - name: 'Distribution (cache)'
        uses: actions/cache@v2
        id: dist-cache
        with:
          path: output/docs/php_nml
          key: ${{ runner.os }}-dist-${{ github.sha }}

      # Prepare PHP ------------------------------------------------------------
      - name: Setup PHP 7.2 environment
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        uses: nanasess/setup-php@v3.0.6
        with:
          php-version: 7.2

      - name: Get Composer directories
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        id: composer-dirs
        run: |
          echo "::set-output name=cache::$(composer config cache-files-dir)"
          echo "::set-output name=home::$(composer config home --global)"

      - name: Composer (cache)
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-dirs.outputs.cache }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Prepare composer global
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: |
          composer global config minimum-stability dev
          composer global config prefer-stable true
          echo "${{ steps.composer-dirs.outputs.home }}/vendor/bin" >> $GITHUB_PATH

      - name: Install phpDocumentor globally
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: composer global require phpdocumentor/phpdocumentor:^2.9.1

      - name: Install dependencies
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: composer install --prefer-dist --no-progress

      # Prepare npm ------------------------------------------------------------
      - name: Setup Node.js environment
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '12'

      - name: Get npm cache directory
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: NPM (cache)
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: npm install

      # Build ------------------------------------------------------------------
      - name: Building PHP API documentation
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: composer build:api-docs

      - name: Building VuePress documentation
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: npm run docs:build
